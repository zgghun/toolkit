
server:
  port: 8200

#https://docs.spring.io/spring-boot/docs/2.0.6.RELEASE/reference/htmlsingle/#boot-features-logging
logging:
  config: classpath:config/log4j2-spring.xml


spring:
  application:
    name: toolkit-api
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.105.34.242:3306/toolkit?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: d1Aa4aNty4rkvjO2rkZxjXPaaxHDqDN9sjl3un+CiT0lDvThKS0lhMP7RVuRyIcO9bVThyhyhb4gozDm7bUjlw==
    druid:
      max-active: 5
      min-idle: 1
      max-wait: 10000
      connection-properties: config.decrypt=true;config.decrypt.key=${public-key}
      filter:
        config:
          enabled: true
# 这个应该存在其他地方
public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJYO8jR0IDetilnYRay2uXY15q1WOFaNEGSBWuRNtQ40jC84MXawC4rSf+/JwwZrwuO9O3Ij1tJ70uk9ydtuhdECAwEAAQ==

#  kafka:
#    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      group-id: test-consumer-group
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer




mybatis:
  # 这里使用classpath*,这样才能找到依赖模块system中resource下的xml等静态资源文件，否则会报 invalid bound statement (not found)异常
  mapper-locations: classpath*:mapper/*.xml,classpath*:mapper/autogen/*.xml
  configuration:
    map-underscore-to-camel-case: true

